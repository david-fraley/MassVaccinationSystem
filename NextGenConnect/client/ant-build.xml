<project name="mirth-client" basedir="." default="help">
	<target name="help">
		<echo>Mirth Client Build Help</echo>
		<echo>-----------------------</echo>
	</target>

	<target name="init">
		<property file="build.properties" />

		<path id="classpath">
			<fileset dir="${lib}" includes="**/*.jar" />
			<!-- include the extensions libs in case they have jars required for the client -->
			<fileset dir="${server}/lib/extensions" includes="**/*.jar" />
		</path>

		<mkdir dir="${logs}" />

		<property name="extensions" value="${dist}/extensions" />

		<!-- connectors -->
		<property name="connectors.jms" value="${extensions}/jms" />
		<property name="connectors.jdbc" value="${extensions}/jdbc" />
		<property name="connectors.dicom" value="${extensions}/dicom" />
		<property name="connectors.http" value="${extensions}/http" />
		<property name="connectors.doc" value="${extensions}/doc" />
		<property name="connectors.smtp" value="${extensions}/smtp" />
		<property name="connectors.tcp" value="${extensions}/tcp" />
		<property name="connectors.file" value="${extensions}/file" />
		<property name="connectors.js" value="${extensions}/js" />
		<property name="connectors.ws" value="${extensions}/ws" />
		<property name="connectors.vm" value="${extensions}/vm" />
		
		<!-- datatypes -->
		<property name="plugins.datatype-delimited" value="${extensions}/datatype-delimited" />
		<property name="plugins.datatype-dicom" value="${extensions}/datatype-dicom" />
		<property name="plugins.datatype-edi" value="${extensions}/datatype-edi" />
		<property name="plugins.datatype-hl7v2" value="${extensions}/datatype-hl7v2" />
		<property name="plugins.datatype-hl7v3" value="${extensions}/datatype-hl7v3" />
		<property name="plugins.datatype-ncpdp" value="${extensions}/datatype-ncpdp" />
		<property name="plugins.datatype-xml" value="${extensions}/datatype-xml" />
		<property name="plugins.datatype-raw" value="${extensions}/datatype-raw" />
		<property name="plugins.datatype-json" value = "${extensions}/datatype-json" />

		<!-- plugins -->
		<property name="plugins.directoryresource" value="${extensions}/directoryresource" />
		<property name="plugins.dashboardstatus" value="${extensions}/dashboardstatus" />
		<property name="plugins.destinationsetfilter" value="${extensions}/destinationsetfilter" />
		<property name="plugins.dicomviewer" value="${extensions}/dicomviewer" />
		<property name="plugins.extensionmanager" value="${extensions}/extensionmanager" />
		<property name="plugins.httpauth" value="${extensions}/httpauth" />
		<property name="plugins.imageviewer" value="${extensions}/imageviewer" />
		<property name="plugins.javascriptrule" value="${extensions}/javascriptrule" />
		<property name="plugins.javascriptstep" value="${extensions}/javascriptstep" />
		<property name="plugins.mapper" value="${extensions}/mapper" />
		<property name="plugins.messagebuilder" value="${extensions}/messagebuilder" />
		<property name="plugins.datapruner" value="${extensions}/datapruner" />
		<property name="plugins.globalmapviewer" value="${extensions}/globalmapviewer" />
		<property name="plugins.mllpmode" value="${extensions}/mllpmode" />
		<property name="plugins.pdfviewer" value="${extensions}/pdfviewer" />
		<property name="plugins.textviewer" value="${extensions}/textviewer" />
		<property name="plugins.rulebuilder" value="${extensions}/rulebuilder" />
		<property name="plugins.serverlog" value="${extensions}/serverlog" />
		<property name="plugins.scriptfilerule" value="${extensions}/scriptfilerule" />
		<property name="plugins.scriptfilestep" value="${extensions}/scriptfilestep" />
		<property name="plugins.xsltstep" value="${extensions}/xsltstep" />
	</target>

	<target name="clean" depends="init">
		<delete dir="${classes}" />
		<delete dir="${dist}" />
	</target>

	<target name="compile" depends="clean, init">
		<mkdir dir="${classes}" />
		<javac srcdir="${src}" destdir="${classes}" debug="on" includeAntRuntime="false">
			<classpath refid="classpath" />
		</javac>

		<copy todir="${classes}" file="${src}/log4j.properties" />

		<!-- copy the image files so they will be included in jar -->
		<copy todir="${classes}/com/mirth/connect/client/ui/images">
			<fileset dir="${src}/com/mirth/connect/client/ui/images" />
		</copy>
		
		<!-- Copy syntax text area resource bundle properties files -->
		<copy todir="${classes}/com/mirth/connect/client/ui/components/rsta">
			<fileset dir="${src}/com/mirth/connect/client/ui/components/rsta">
				<include name="*.properties" />
			</fileset>
		</copy>
		
		<!-- Copy HTML files to use with JavaFX -->
		<copy todir="${classes}/com/mirth/connect/client/ui/components/tag">
			<fileset dir="${src}/com/mirth/connect/client/ui/components/tag">
				<include name="*.html" />
				<include name="*.css" />
				<include name="*.js" />
			</fileset>
		</copy>
	</target>

	<target name="build" depends="compile">
		<mkdir dir="${dist}" />

		<jar destfile="${dist}/${client.jar}">
			<fileset dir="${classes}">
				<exclude name="com/mirth/connect/connectors/**/**" />
			</fileset>
			<fileset dir="${classes}">
				<include name="com/mirth/connect/connectors/ConnectorClass.class" />
			</fileset>
		</jar>

		<!-- connectors -->
		<mkdir dir="${connectors.dicom}" />
		<jar destfile="${connectors.dicom}/dicom-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/dimse/**" />
		</jar>

		<mkdir dir="${connectors.jdbc}" />
		<jar destfile="${connectors.jdbc}/jdbc-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/jdbc/**" />
		</jar>

		<mkdir dir="${connectors.jms}" />
		<jar destfile="${connectors.jms}/jms-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/jms/**" />
		</jar>

		<mkdir dir="${connectors.http}" />
		<jar destfile="${connectors.http}/http-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/http/**" />
		</jar>

		<mkdir dir="${connectors.doc}" />
		<jar destfile="${connectors.doc}/doc-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/doc/**" />
		</jar>

		<mkdir dir="${connectors.smtp}" />
		<jar destfile="${connectors.smtp}/smtp-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/smtp/**" />
		</jar>

		<mkdir dir="${connectors.tcp}" />
		<jar destfile="${connectors.tcp}/tcp-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/tcp/**" />
		</jar>

		<mkdir dir="${connectors.file}" />
		<jar destfile="${connectors.file}/file-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/file/**" />
		</jar>

		<mkdir dir="${connectors.js}" />
		<jar destfile="${connectors.js}/js-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/js/**" />
		</jar>

		<mkdir dir="${connectors.ws}" />
		<jar destfile="${connectors.ws}/ws-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/ws/**" />
		</jar>

		<mkdir dir="${connectors.vm}" />
		<jar destfile="${connectors.vm}/vm-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/connectors/vm/**" />
		</jar>

		<!-- plugins -->
		<mkdir dir="${plugins.datatype-delimited}" />
		<jar destfile="${plugins.datatype-delimited}/datatype-delimited-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/delimited/**" />
		</jar>
		
		<mkdir dir="${plugins.datatype-dicom}" />
		<jar destfile="${plugins.datatype-dicom}/datatype-dicom-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/dicom/**" />
		</jar>
			
		<mkdir dir="${plugins.datatype-edi}" />
		<jar destfile="${plugins.datatype-edi}/datatype-edi-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/edi/**" />
		</jar>
		
		<mkdir dir="${plugins.datatype-hl7v2}" />
		<jar destfile="${plugins.datatype-hl7v2}/datatype-hl7v2-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/hl7v2/**" />
		</jar>
		
		<mkdir dir="${plugins.datatype-hl7v3}" />
		<jar destfile="${plugins.datatype-hl7v3}/datatype-hl7v3-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/hl7v3/**" />
		</jar>
		
		<mkdir dir="${plugins.datatype-ncpdp}" />
		<jar destfile="${plugins.datatype-ncpdp}/datatype-ncpdp-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/ncpdp/**" />
		</jar>
			
		<mkdir dir="${plugins.datatype-xml}" />
		<jar destfile="${plugins.datatype-xml}/datatype-xml-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/xml/**" />
		</jar>
		
		<mkdir dir="${plugins.datatype-raw}" />
		<jar destfile="${plugins.datatype-raw}/datatype-raw-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/raw/**" />
		</jar>
		
		<mkdir dir="${plugins.datatype-json}" />
		<jar destfile="${plugins.datatype-json}/datatype-json-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datatypes/json/**" />
		</jar>
		
		<mkdir dir="${plugins.directoryresource}" />
		<jar destfile="${plugins.directoryresource}/directoryresource-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/directoryresource/**" />
		</jar>
		
		<mkdir dir="${plugins.dashboardstatus}" />
		<jar destfile="${plugins.dashboardstatus}/dashboardstatus-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/dashboardstatus/**" />
		</jar>
		
		<mkdir dir="${plugins.destinationsetfilter}" />
		<jar destfile="${plugins.destinationsetfilter}/destinationsetfilter-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/destinationsetfilter/**" />
		</jar>

		<mkdir dir="${plugins.dicomviewer}" />
		<jar destfile="${plugins.dicomviewer}/dicomviewer-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/dicomviewer/**" />
		</jar>

		<mkdir dir="${plugins.extensionmanager}" />
		<jar destfile="${plugins.extensionmanager}/extensionmanager-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/extensionmanager/**" />
		</jar>
		
		<mkdir dir="${plugins.globalmapviewer}" />
		<jar destfile="${plugins.globalmapviewer}/globalmapviewer-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/globalmapviewer/**" />
		</jar>
		
		<mkdir dir="${plugins.httpauth}" />
		<jar destfile="${plugins.httpauth}/httpauth-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/httpauth/**" />
		</jar>

		<mkdir dir="${plugins.imageviewer}" />
		<jar destfile="${plugins.imageviewer}/imageviewer-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/imageviewer/**" />
		</jar>

		<mkdir dir="${plugins.javascriptrule}" />
		<jar destfile="${plugins.javascriptrule}/javascriptrule-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/javascriptrule/**" />
		</jar>

		<mkdir dir="${plugins.javascriptstep}" />
		<jar destfile="${plugins.javascriptstep}/javascriptstep-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/javascriptstep/**" />
		</jar>

		<mkdir dir="${plugins.mapper}" />
		<jar destfile="${plugins.mapper}/mapper-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/mapper/**" />
		</jar>

		<mkdir dir="${plugins.messagebuilder}" />
		<jar destfile="${plugins.messagebuilder}/messagebuilder-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/messagebuilder/**" />
		</jar>

		<mkdir dir="${plugins.datapruner}" />
		<jar destfile="${plugins.datapruner}/datapruner-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/datapruner/**" />
		</jar>

		<mkdir dir="${plugins.mllpmode}" />
		<jar destfile="${plugins.mllpmode}/mllpmode-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/mllpmode/**" />
		</jar>

		<mkdir dir="${plugins.pdfviewer}" />
		<jar destfile="${plugins.pdfviewer}/pdfviewer-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/pdfviewer/**" />
		</jar>

		<mkdir dir="${plugins.textviewer}" />
		<jar destfile="${plugins.textviewer}/textviewer-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/textviewer/**" />
		</jar>

		<mkdir dir="${plugins.rulebuilder}" />
		<jar destfile="${plugins.rulebuilder}/rulebuilder-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/rulebuilder/**" />
		</jar>

		<mkdir dir="${plugins.serverlog}" />
		<jar destfile="${plugins.serverlog}/serverlog-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/serverlog/**" />
		</jar>

		<mkdir dir="${plugins.scriptfilerule}" />
		<jar destfile="${plugins.scriptfilerule}/scriptfilerule-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/scriptfilerule/**" />
		</jar>

		<mkdir dir="${plugins.scriptfilestep}" />
		<jar destfile="${plugins.scriptfilestep}/scriptfilestep-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/scriptfilestep/**" />
		</jar>

		<mkdir dir="${plugins.xsltstep}" />
		<jar destfile="${plugins.xsltstep}/xsltstep-client.jar" basedir="${classes}">
			<include name="com/mirth/connect/plugins/xsltstep/**" />
		</jar>
	</target>
	
	<target name="test-init" depends="init">
		<delete dir="${test_classes}" />
		
		<path id="testclasspath">
			<path refid="classpath" />
			<fileset dir="${server}/testlib" includes="**/*.jar" />
			<dirset dir="${classes}"/>
		</path>
	</target>
	
	<target name="test-compile" depends="test-init">
		<!-- compile the source -->
		<mkdir dir="${test_classes}" />
		
		<javac srcdir="${test}" destdir="${test_classes}" debug="on" includeAntRuntime="false">
			<classpath refid="testclasspath" />
		</javac>
	</target>
	
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="${server}/lib/ant/jacocoant.jar"/>
	</taskdef>
	
	<target name="test-run" depends="test-compile">
		<property name="junit-reports" value="junit-reports" />
		<property name="code-coverage-reports" value="code-coverage-reports" />
		<mkdir dir="${junit-reports}" />
		<mkdir dir="${code-coverage-reports}" />
		
		<jacoco:coverage destfile="${code-coverage-reports}/jacoco.exec" xmlns:jacoco="antlib:org.jacoco.ant" exclclassloader="sun.reflect.DelegatingClassLoader:javassist.Loader" >
			<junit haltonfailure="false" fork="true" forkmode="once">
				<jvmarg value="-Xms128m" />
				<jvmarg value="-Xmx1024m" />
				<classpath>
					<path refid="testclasspath" />
					<dirset dir="${test_classes}"/>
				</classpath>
				<formatter type="xml" />
				<batchtest todir="${junit-reports}">
					<fileset dir="${test_classes}">
						<include name="**/*Test.class" />
					</fileset>
				</batchtest>
			</junit>
		</jacoco:coverage>
	</target>
	
	<target name="remove-classes" depends="init">
		<!-- delete the compiled classes folder -->
		<delete dir="${classes}" />
		<delete dir="${test_classes}" />
	</target>
</project>
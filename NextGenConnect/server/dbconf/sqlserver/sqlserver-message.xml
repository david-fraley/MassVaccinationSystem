<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'conf/dtd/mybatis-3-mapper.dtd'>

<mapper namespace="Message">
	<resultMap id="messageContent" type="com.mirth.connect.donkey.model.message.MessageContent">
		<id property="messageId" column="MESSAGE_ID" />
		<id property="metaDataId" column="METADATA_ID" />
		<result property="contentType" column="CONTENT_TYPE" typeHandler="com.mirth.connect.server.sqlmap.extensions.ContentTypeHandler" />
		<result property="content" column="CONTENT" />
		<result property="dataType" column="DATA_TYPE" />
		<result property="encrypted" column="IS_ENCRYPTED" />
	</resultMap>
	
	<resultMap id="messageSearchResult" type="MessageSearchResult">
		<result property="messageId" column="ID" />
		<result property="serverId" column="SERVER_ID" />
		<result property="receivedDate" column="RECEIVED_DATE" />
		<result property="processed" column="PROCESSED" />
		<result property="originalId" column="ORIGINAL_ID" />
		<result property="importId" column="IMPORT_ID" />
		<result property="importChannelId" column="IMPORT_CHANNEL_ID" />
		<result property="metaDataId" column="METADATA_ID" />
	</resultMap>
	
	<resultMap id="message" type="Message">
		<result property="messageId" column="ID" />
		<result property="serverId" column="SERVER_ID" />
		<result property="receivedDate" column="RECEIVED_DATE" />
		<result property="processed" column="PROCESSED" />
		<result property="originalId" column="ORIGINAL_ID" />
		<result property="importId" column="IMPORT_ID" />
		<result property="importChannelId" column="IMPORT_CHANNEL_ID" />
	</resultMap>
	
	<resultMap id="pruner-message-map" type="map">
		<result property="id" column="ID" javaType="Long" />
		<result property="server_id" column="SERVER_ID" javaType="String" />
		<result property="received_date" column="RECEIVED_DATE" javaType="java.util.Calendar" />
		<result property="mm_received_date" column="MM_RECEIVED_DATE" javaType="java.util.Calendar" />
		<result property="processed" column="PROCESSED" javaType="Boolean" />
		<result property="original_Id" column="ORIGINAL_ID" javaType="Long" />
		<result property="import_id" column="IMPORT_ID" javaType="Long" />
		<result property="import_channel_id" column="IMPORT_CHANNEL_ID" javaType="String" />
	</resultMap>
	
	<resultMap id="messageTextResult" type="MessageTextResult">
		<result property="messageId" column="MESSAGE_ID" />
		<result property="metaDataId" column="METADATA_ID" />
		<result property="contentType" column="CONTENT_TYPE" />
		<result property="textFound" column="TEXT_FOUND" />
		<result property="importId" column="IMPORT_ID" />
		<result property="processed" column="PROCESSED" />
	</resultMap>

	<select id="selectMessageForReprocessing" parameterType="map" resultMap="messageContent">
		SELECT MESSAGE_ID, METADATA_ID, CONTENT_TYPE, CONTENT, DATA_TYPE, IS_ENCRYPTED
		FROM D_MC${localChannelId}
		WHERE MESSAGE_ID = #{messageId}
		AND METADATA_ID = 0
		AND CONTENT_TYPE IN (1, 15)
	</select>
	
	<select id="searchMessageTable" parameterType="map" resultMap="messageTextResult">
		SELECT ID AS MESSAGE_ID
			<if test="includeImportId != null">
				, IMPORT_ID
			</if>
			<if test="includeProcessed != null">
				, PROCESSED
			</if>
			
		FROM D_M${localChannelId} M
		<where>
			<if test="minMessageId != null">
				ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
			<if test="maxMessageId != null">
				AND ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			<if test="originalIdLower != null">
				AND ORIGINAL_ID <![CDATA[ >= ]]> #{originalIdLower}
			</if>
			<if test="originalIdUpper != null">
				AND ORIGINAL_ID <![CDATA[ <= ]]> #{originalIdUpper}
			</if>
			<if test="importIdLower != null">
				AND IMPORT_ID <![CDATA[ >= ]]> #{importIdLower}
			</if>
			<if test="importIdUpper != null">
				AND IMPORT_ID <![CDATA[ <= ]]> #{importIdUpper}
			</if>
			<if test="startDate != null">
				AND RECEIVED_DATE <![CDATA[ >= ]]> #{startDate}
			</if>
			<if test="endDate != null">
				AND RECEIVED_DATE <![CDATA[ <= ]]> #{endDate}
			</if>
			<if test="serverId != null">
				AND SERVER_ID LIKE '%' + #{serverId} + '%'
			</if>
			<if test="attachment != null and attachment == true">
				AND EXISTS (SELECT 1 FROM D_MA${localChannelId} MA WHERE MA.MESSAGE_ID = M.ID)
			</if>
		</where>
	</select>
	
	<select id="searchMetaDataTable" parameterType="map" resultMap="messageTextResult">
		SELECT MESSAGE_ID AS MESSAGE_ID, ID AS METADATA_ID,
		<choose>
			<when test="textSearch != null">
				CASE WHEN CONNECTOR_NAME LIKE '%' + #{textSearch} + '%' THEN 1
				ELSE 0
				END
			</when>
			<otherwise>
				0
			</otherwise>
		</choose>
		AS TEXT_FOUND
			
		FROM D_MM${localChannelId}
		
		<where>
			<if test="minMessageId != null">
				MESSAGE_ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
			<if test="maxMessageId != null">
				AND MESSAGE_ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			<if test="statuses != null">
				AND STATUS IN
				<foreach item="status" collection="statuses" open="(" separator="," close=")">
					#{status}
				</foreach>
			</if>
			<if test="includedMetaDataIds != null">
				AND ID IN
				<foreach item="metaDataId" collection="includedMetaDataIds" open="(" separator="," close=")">
					#{metaDataId}
				</foreach>
			</if>
			<if test="excludedMetaDataIds != null">
				AND ID NOT IN
				<foreach item="metaDataId" collection="excludedMetaDataIds" open="(" separator="," close=")">
					#{metaDataId}
				</foreach>
			</if>
			<if test="sendAttemptsLower != null">
				AND SEND_ATTEMPTS <![CDATA[ >= ]]> #{sendAttemptsLower}
			</if>
			<if test="sendAttemptsUpper != null">
				AND SEND_ATTEMPTS <![CDATA[ <= ]]> #{sendAttemptsUpper}
			</if>
			<if test="error != null and error == true">
				AND ERROR_CODE <![CDATA[ > ]]> 0
			</if>
		</where>
	</select>
	
	<select id="searchCustomMetaDataTable" parameterType="map" resultMap="messageTextResult">
		SELECT MESSAGE_ID AS MESSAGE_ID, METADATA_ID AS METADATA_ID
			
		FROM D_MCM${localChannelId}
		
		<where>
			<if test="minMessageId != null">
				MESSAGE_ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
			<if test="maxMessageId != null">
				AND MESSAGE_ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			<if test="includedMetaDataIds != null">
				AND METADATA_ID IN
				<foreach item="metaDataId" collection="includedMetaDataIds" open="(" separator="," close=")">
					#{metaDataId}
				</foreach>
			</if>
			<if test="excludedMetaDataIds != null">
				AND METADATA_ID NOT IN
				<foreach item="metaDataId" collection="excludedMetaDataIds" open="(" separator="," close=")">
					#{metaDataId}
				</foreach>
			</if>
			
			<if test="textSearch != null">
				AND 
				
				<foreach item="column" collection="textSearchMetaDataColumns" open="(" separator=" OR " close=")">
					"${column}" LIKE '%' + #{textSearch} + '%'
				</foreach>
			</if>
			
			<if test="metaDataSearch != null">
				<foreach item="element" collection="metaDataSearch">
					AND 
					
					<choose>
						<when test="element.ignoreCase">
							UPPER(${element.columnName})
						</when>
						<otherwise>
							${element.columnName}
						</otherwise>
					</choose>

					<choose>
						<when test="element.operator == 'EQUAL'">
							<![CDATA[ = ]]> 
						</when>
						<when test="element.operator == 'NOT_EQUAL'">
							<![CDATA[ != ]]> 
						</when>
						<when test="element.operator == 'LESS_THAN'">
							<![CDATA[ < ]]> 
						</when>
						<when test="element.operator == 'LESS_THAN_OR_EQUAL'">
							<![CDATA[ <= ]]> 
						</when>
						<when test="element.operator == 'GREATER_THAN'">
							<![CDATA[ > ]]> 
						</when>
						<when test="element.operator == 'GREATER_THAN_OR_EQUAL'">
							<![CDATA[ >= ]]> 
						</when>
						<when test="element.operator == 'CONTAINS' || element.operator == 'STARTS_WITH' || element.operator == 'ENDS_WITH'">
							LIKE 
						</when>
						<when test="element.operator == 'DOES_NOT_CONTAIN' || element.operator == 'DOES_NOT_START_WITH' || element.operator == 'DOES_NOT_END_WITH'">
							NOT LIKE 
						</when>
					</choose>
					
					<if test="element.operator == 'CONTAINS' || element.operator == 'DOES_NOT_CONTAIN' || element.operator == 'ENDS_WITH' || element.operator == 'DOES_NOT_END_WITH'">
						'%' + 
					</if>
					
					<choose>
						<when test="element.ignoreCase">
							UPPER(#{element.value})
						</when>
						<otherwise>
							#{element.value}
						</otherwise>
					</choose>
					
					<if test="element.operator == 'CONTAINS'  || element.operator == 'DOES_NOT_CONTAIN' || element.operator == 'STARTS_WITH' || element.operator == 'DOES_NOT_START_WITH'">
						+ '%'
					</if>
				</foreach>
			</if>
		</where>
	</select>
	
	<select id="searchContentTable" parameterType="map" resultMap="messageTextResult">
		SELECT MESSAGE_ID AS MESSAGE_ID, METADATA_ID AS METADATA_ID, CONTENT_TYPE AS CONTENT_TYPE
			
		FROM D_MC${localChannelId}
		
		<where>
			<if test="minMessageId != null">
				MESSAGE_ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
			<if test="maxMessageId != null">
				AND MESSAGE_ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			<if test="metaDataId != null">
				AND METADATA_ID = #{metaDataId}
			</if>
			<if test="contentType != null">
				AND CONTENT_TYPE = #{contentType}
			</if>
			<foreach item="content" collection="contents">
				AND CONTENT LIKE '%' + #{content} + '%'
			</foreach>
		</where>
	</select>
	
	<select id="selectMessagesById" parameterType="map" resultMap="messageSearchResult">
		SELECT
			ID,
			SERVER_ID,
			RECEIVED_DATE,
			PROCESSED,
			ORIGINAL_ID,
			IMPORT_CHANNEL_ID,
			IMPORT_ID

		FROM D_M${localChannelId}
		<where>
			<if test="minMessageId != null">
				ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
			<if test="maxMessageId != null">
				AND ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			<if test="includeMessageList != null">
				AND ID IN (${includeMessageList})
			</if>
		</where>
		ORDER BY ID DESC
	</select>
	
	<select id="selectMessageById" resultMap="message">
		SELECT 
			ID,
			SERVER_ID,
			RECEIVED_DATE,
			PROCESSED,
			ORIGINAL_ID,
			IMPORT_ID,
			IMPORT_CHANNEL_ID
			
		FROM D_M${localChannelId}
		WHERE ID = #{messageId}
	</select>
	
	<select id="selectMessageContent" resultMap="messageContent">
		SELECT METADATA_ID,	MESSAGE_ID,	CONTENT_TYPE, CONTENT, DATA_TYPE, ENCRYPTED
		FROM D_MC${localChannelId}
		WHERE MESSAGE_ID = #{messageId}
		AND METADATA_ID IN
		<foreach item="metaDataId" collection="metaDataIds" open="(" separator="," close=")">
			#{metaDataId}
		</foreach>
	</select>
	
	<select id="selectMessageAttachmentIds" parameterType="map" resultType="Attachment">
		SELECT ID, TYPE
		FROM D_MA${localChannelId}
		WHERE MESSAGE_ID = #{messageId}
		GROUP BY ID, TYPE
	</select>
	
	
	
	<!-- Data Pruner/Archiver -->
	
	<update id="initDataPruner" parameterType="map">
		SET DEADLOCK_PRIORITY LOW
	</update>

	<delete id="pruneMessages" parameterType="map">
		DELETE FROM D_M${localChannelId}
		
		<where>
			<if test="includeMessageList != null">
				ID IN (${includeMessageList})
			</if>
			
			<if test="maxMessageId != null">
				AND ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			
			<if test="minMessageId != null">
				AND ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
		</where>
	</delete>
	
	<delete id="pruneConnectorMessages" parameterType="map">
		DELETE FROM D_MM${localChannelId}
		<include refid="pruneWhere" />
	</delete>
	
	<delete id="pruneMessageContent" parameterType="map">
		DELETE FROM D_MC${localChannelId}
		<include refid="pruneWhere" />
	</delete>
	
	<delete id="pruneCustomMetaData" parameterType="map">
		DELETE FROM D_MCM${localChannelId}
		<include refid="pruneWhere" />
	</delete>
	
	<delete id="pruneAttachments" parameterType="map">
		DELETE FROM D_MA${localChannelId}
		<include refid="pruneWhere" />
	</delete>
	
	<sql id="pruneWhere">
		<where>
			<if test="includeMessageList != null">
				MESSAGE_ID IN (${includeMessageList})
			</if>
			
			<if test="maxMessageId != null">
				AND MESSAGE_ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
	
			<if test="minMessageId != null">
				AND MESSAGE_ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
		</where>
	</sql>
	
	<select id="getMessagesToPrune" parameterType="map" resultMap="pruner-message-map">
		<if test="limit != null">
			SELECT A.* FROM (
		</if>
			
			SELECT
				M.ID,
				MM.RECEIVED_DATE AS MM_RECEIVED_DATE,
				ROW_NUMBER() OVER (ORDER BY M.ID) AS ROWNUM
			
			FROM D_M${localChannelId} M
			JOIN D_MM${localChannelId} MM ON MM.MESSAGE_ID = M.ID AND MM.ID = 0
			
			<if test="skipStatuses != null">
				LEFT JOIN D_MM${localChannelId} MM_SKIP ON MM_SKIP.MESSAGE_ID = M.ID AND MM_SKIP.STATUS IN
				<foreach item="status" collection="skipStatuses" open="(" separator="," close=")">
					#{status}
				</foreach>
			</if>
		
			WHERE MM.RECEIVED_DATE <![CDATA[ < ]]> #{dateThreshold}
			
			<if test="maxMessageId != null">
				AND M.ID <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			
			<if test="minMessageId != null">
				AND M.ID <![CDATA[ >= ]]> #{minMessageId}
			</if>
			
			<if test="skipIncomplete == true">
				AND M.PROCESSED = 1
			</if>
			
			<if test="skipStatuses != null">
				AND MM_SKIP.ID IS NULL
			</if>
			
		<if test="limit != null">
			) AS A WHERE A.ROWNUM <![CDATA[ <= ]]> ${limit}
		</if>
	</select>
	
	<update id="pruneEvents" parameterType="map">
		DELETE FROM EVENT
		WHERE DATE_CREATED <![CDATA[ < ]]> #{dateThreshold}
	</update>
</mapper>

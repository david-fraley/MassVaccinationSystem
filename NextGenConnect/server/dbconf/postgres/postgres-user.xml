<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'conf/dtd/mybatis-3-mapper.dtd'><mapper namespace='User'>
   <resultMap id='get-user-result' type='com.mirth.connect.model.User'>
      <result property='id' column='ID' jdbcType='INTEGER'/>
      <result property='username' column='USERNAME'/>
      <result property='firstName' column='FIRSTNAME'/>
      <result property='lastName' column='LASTNAME'/>
      <result property='organization' column='ORGANIZATION'/>
      <result property='industry' column='INDUSTRY'/>
      <result property='email' column='EMAIL'/>
      <result property='phoneNumber' column='PHONENUMBER'/>
      <result property='lastLogin' column='LAST_LOGIN'/>
      <result property='gracePeriodStart' column='GRACE_PERIOD_START'/>
      <result property='strikeCount' column='STRIKE_COUNT'/>
      <result property='lastStrikeTime' column='LAST_STRIKE_TIME'/>
      <result property='description' column='DESCRIPTION'/>
   </resultMap>
   <resultMap id='get-user-credentials' type='com.mirth.connect.model.Credentials'>
      <result property='password' column='PASSWORD'/>
      <result property='passwordDate' column='PASSWORD_DATE'/>
   </resultMap>
   <select id='getUser'
           parameterType='com.mirth.connect.model.User'
           resultMap='get-user-result'>
		SELECT ID, USERNAME, FIRSTNAME, LASTNAME, ORGANIZATION, INDUSTRY, EMAIL, PHONENUMBER, LAST_LOGIN, GRACE_PERIOD_START, STRIKE_COUNT, LAST_STRIKE_TIME, DESCRIPTION
		FROM PERSON
		<where>
         <if test='id != null'>AND ID = #{id}</if>
         <if test='username != null'>AND USERNAME = #{username}</if>
      </where>
	  </select>
   <select id='getUserCredentials'
           parameterType='java.lang.Integer'
           resultMap='get-user-credentials'>
		SELECT PASSWORD, PASSWORD_DATE
		FROM PERSON_PASSWORD
		WHERE PERSON_ID = #{value}
		ORDER BY PASSWORD_DATE DESC NULLS LAST
	</select>
   <select id='getLatestUserCredentials'
           parameterType='java.lang.Integer'
           resultMap='get-user-credentials'>
		SELECT PASSWORD, PASSWORD_DATE
		FROM PERSON_PASSWORD
		WHERE PERSON_ID = #{value}
		ORDER BY PASSWORD_DATE DESC NULLS LAST
		LIMIT 1
	</select>
   <delete id='prunePasswords' parameterType='java.util.Map'>
		DELETE FROM PERSON_PASSWORD
		WHERE PERSON_ID = #{id}
		AND (PASSWORD_DATE <![CDATA[ <= ]]> #{pruneDate} OR PASSWORD_DATE IS NULL)
	</delete>
   <insert id='insertUser' parameterType='java.util.Map'>
		INSERT INTO
		PERSON (USERNAME, FIRSTNAME, LASTNAME, ORGANIZATION, INDUSTRY, EMAIL, PHONENUMBER, DESCRIPTION, LOGGED_IN, LAST_LOGIN)
		VALUES (#{username}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{organization,jdbcType=VARCHAR}, #{industry,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, FALSE, NULL)
	</insert>
   <update id='updateUser' parameterType='java.util.Map'>
		UPDATE PERSON
		SET USERNAME = #{username},
			FIRSTNAME = #{firstName,jdbcType=VARCHAR},
			LASTNAME = #{lastName,jdbcType=VARCHAR},
			ORGANIZATION = #{organization,jdbcType=VARCHAR},
			INDUSTRY = #{industry,jdbcType=VARCHAR},
			EMAIL = #{email,jdbcType=VARCHAR},
			PHONENUMBER = #{phoneNumber,jdbcType=VARCHAR},
			DESCRIPTION = #{description,jdbcType=VARCHAR}
		WHERE ID = #{id}
	</update>
   <insert id='updateUserPassword' parameterType='java.util.Map'>
		INSERT INTO
		PERSON_PASSWORD (PERSON_ID, PASSWORD, PASSWORD_DATE)
		VALUES (#{id}, #{password}, #{passwordDate})
	</insert>
   <delete id='deleteUser' parameterType='com.mirth.connect.model.User'>
		DELETE FROM PERSON
		<where>
         <if test='id != null'>AND ID=#{id}</if>
      </where>
	  </delete>
   <update id='startGracePeriod' parameterType='java.util.Map'>
		UPDATE PERSON
		SET GRACE_PERIOD_START = #{gracePeriodStart}
		WHERE ID = #{id}
	</update>
   <update id='clearGracePeriod' parameterType='java.lang.Integer'>
		UPDATE PERSON
		SET GRACE_PERIOD_START = NULL
		WHERE ID = #{value}
	</update>
	<update id='incrementStrikes' parameterType='java.lang.Integer'>
		UPDATE PERSON
		SET STRIKE_COUNT = COALESCE(STRIKE_COUNT, 0) + 1,
		LAST_STRIKE_TIME = NOW()
		WHERE ID = #{value}
	</update>
	<update id='resetStrikes' parameterType='java.lang.Integer'>
		UPDATE PERSON
		SET STRIKE_COUNT = 0,
		LAST_STRIKE_TIME = NULL
		WHERE ID = #{value}
	</update>
   <!-- Login/Logout Procedures --><update id='loginUser' parameterType='java.util.Map'>
		UPDATE PERSON
		SET LOGGED_IN = TRUE,
		LAST_LOGIN = #{lastLogin}
		WHERE ID = #{id}
	</update>
   <update id='logoutUser' parameterType='java.lang.Integer'>
		UPDATE PERSON
		SET LOGGED_IN = FALSE
		WHERE ID = #{value}
	</update>
   <select id='isUserLoggedIn'
           parameterType='java.lang.Integer'
           resultType='java.lang.Boolean'>
		SELECT LOGGED_IN
		FROM PERSON
		WHERE ID = #{value}
	</select>
   <update id='resetUserStatus'>
		UPDATE PERSON
		SET LOGGED_IN = FALSE
	</update>
	
	<select id='selectPreferencesForUser' parameterType='java.lang.String' resultType='KeyValuePair'>
		SELECT NAME AS "key", VALUE AS "value"
		FROM PERSON_PREFERENCE
		WHERE PERSON_ID = #{value}
	</select>
	<select id='selectPreference' parameterType='java.util.Map' resultType='java.lang.String'>
		SELECT VALUE
		FROM PERSON_PREFERENCE
		WHERE PERSON_ID = #{person_id}
		AND NAME = #{name}
	</select>
	<insert id='insertPreference' parameterType='java.util.Map'>
		INSERT INTO
		PERSON_PREFERENCE (PERSON_ID, NAME, VALUE)
		VALUES (#{person_id}, #{name},
		#{value})
	</insert>
	<update id='updatePreference' parameterType='java.util.Map'>
		UPDATE PERSON_PREFERENCE
		SET VALUE = #{value}
		WHERE PERSON_ID = #{person_id} AND NAME = #{name}
	</update>
	<delete id='deletePreference' parameterType='java.util.Map'>
		DELETE FROM PERSON_PREFERENCE
		WHERE PERSON_ID = #{person_id}
		<if test='name != null'>
			AND NAME = #{name}
		</if>
	</delete>
</mapper>

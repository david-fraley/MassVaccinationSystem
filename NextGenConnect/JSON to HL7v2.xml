<channel version="3.10.0">
  <id>fc8a6f25-9b94-48ee-b7a9-34337a0a45f7</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>JSON to HL7v2</name>
  <description>This channel converts a JSON request to an HL7 VXU^V04.</description>
  <revision>31</revision>
  <sourceConnector version="3.10.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.10.0">
      <pluginProperties/>
      <sourceConnectorProperties version="3.10.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.10.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>MSH Segment</name>
          <sequenceNumber>0</sequenceNumber>
          <enabled>true</enabled>
          <script>//see outbound template for hard-coded MSH values

//Try to get MSH-4 from the Location&apos;s WIR ID
try{
	var location = msg[&apos;entry&apos;].filter(function (entry) {
		return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Location&quot;
	})[0][&apos;resource&apos;];
	
	tmp[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;] = location[&apos;identifier&apos;].filter(function (id) {
		return id[&apos;system&apos;] === &quot;WIR&quot;
	})[0][&apos;value&apos;];
} catch (e){
	if (!(e instanceof TypeError)){
		throw e;
	}
}

tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;] = DateUtil.getCurrentDate(&quot;yyyyMMddHHmmss&quot;);
tmp[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;] = connectorMessage.getMessageId();</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>PID Segment </name>
          <sequenceNumber>1</sequenceNumber>
          <enabled>true</enabled>
          <script>//JSON to PID mapping starts here

//msg is the inbound template (or json)
//tmp is the outbound template (or hl7 v2)

var patient = msg[&apos;entry&apos;].filter(function (entry) {
	return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Patient&quot;
})[0][&apos;resource&apos;];

//PID-3 patient id
var ids = [];
for (var i = 0; i &lt; getArrayOrXmlLength(patient[&apos;identifier&apos;]); i++) {
	var id = [];
	try{
		id[0] = patient[&apos;identifier&apos;][i][&apos;value&apos;].toString();
		id[3] = patient[&apos;identifier&apos;][i][&apos;type&apos;][&apos;coding&apos;][0][&apos;display&apos;].toString();
		id[4] = patient[&apos;identifier&apos;][i][&apos;type&apos;][&apos;coding&apos;][0][&apos;code&apos;].toString();
	} catch (e) {
		//TypeError means that one of the above three values does not exist
		if (!(e instanceof TypeError)){
			throw e;
		}
	}
	if (id[0] &amp;&amp; id[3] &amp;&amp; id[4]) { 
		ids.push(id.join(&apos;^&apos;));
	}
}
tmp[&apos;PID&apos;][&apos;PID.3&apos;] = ids.join(&apos;~&apos;);

//PID-5 patient name
tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.1&apos;] = patient[&apos;name&apos;][0][&apos;family&apos;];
tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.2&apos;] = patient[&apos;name&apos;][0][&apos;given&apos;][0];
tmp[&apos;PID&apos;][&apos;PID.5&apos;][&apos;PID.5.7&apos;] = &quot;L&quot;;  // Legal Name		

//PID-7 Birthdate 

var birthDate = patient[&apos;birthDate&apos;];
tmp[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;] = birthDate.split(&apos;-&apos;).join(&apos;&apos;);


//PID-8 Administrative Sex -- Needs to be edited for actualy values F/M

if(patient[&apos;gender&apos;] == &apos;female&apos;){  
	tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = &apos;F&apos;;
}
else if(patient[&apos;gender&apos;] == &quot;male&quot;){
	tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = &apos;M&apos;;
	}

else{
	tmp[&apos;PID&apos;][&apos;PID.8&apos;][&apos;PID.8.1&apos;] = &apos;U&apos;;
}

//PID-10 Race  -- MVS-528



//PID-11 address
tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.1&apos;] = patient[&apos;address&apos;][0][&apos;line&apos;][0];
tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.3&apos;] = patient[&apos;address&apos;][0][&apos;city&apos;];
tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.4&apos;] = patient[&apos;address&apos;][0][&apos;state&apos;];
tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.5&apos;] = patient[&apos;address&apos;][0][&apos;postalCode&apos;];
tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.6&apos;] = patient[&apos;address&apos;][0][&apos;country&apos;];
tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;PID.11.7&apos;] = &apos;M&apos; // Mailing address

//PID-13 Home Phone Number 
var phoneNumber = patient[&apos;telecom&apos;][0][&apos;value&apos;]; // get phone number
var areaCode = phoneNumber.replace(/\D/g,&apos;&apos;).substr(0, 3) 
var number = phoneNumber.replace(/\D/g,&apos;&apos;).substr(3, 10) 

tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.2&apos;] = &apos;HL70201&apos;;
tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.6&apos;] = areaCode;
tmp[&apos;PID&apos;][&apos;PID.13&apos;][&apos;PID.13.7&apos;] = number; 


// PID-22 Ethnic Group -- MVS-528</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>PD1 Segment (RE)</name>
          <sequenceNumber>2</sequenceNumber>
          <enabled>true</enabled>
          <script>// WIR message may have 1 PD1 Segment

//PD1-11 - Publicity Code


//PD1-12 - Protection Indicator


//PD1-13 Effective date for PD1-12


//PD1-16 Immunization Registry Status


//PD1-17 Effective date for PD1-16


//PD1-18 Effective date for PD1-11</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>NK1 Segment (RE)</name>
          <sequenceNumber>3</sequenceNumber>
          <enabled>true</enabled>
          <script>/*
// WIR message may have 0+ NK1 Segments
// Currently deciding to omit this segment


// NK1-1 Set ID - Sets the ID for the first related party and so on 1..2..3 for multiple NK1 segments
// If only listing one contact this always remains 1

tmp[&apos;NK1&apos;][&apos;NK1.1&apos;] = 1;

//NK1-2 Name of responsible person

tmp[&apos;NK1&apos;][&apos;NK1.2&apos;][&apos;NK1.2.1&apos;] = patient[&apos;contact&apos;][1][&apos;family&apos;];
tmp[&apos;NK1&apos;][&apos;NK1.2&apos;][&apos;NK1.2.2&apos;] = patient[&apos;contact&apos;][1][&apos;given&apos;][0]; 
tmp[&apos;NK1&apos;][&apos;NK1.2&apos;][&apos;NK1.2.7&apos;] = &quot;L&quot;;  // Legal Name

//NK1-3 Relationship -- Trick one because of 0063 in WIR and 0131 aren&apos;t compatible in FHIR... use something else in FHIR?


tmp[&apos;NK1&apos;][&apos;NK1.3&apos;][&apos;NK1.3.1&apos;] = patient[&apos;contact&apos;][0][0][1];

// Need a bunch of if statements accordint to page 44 in WIR implementation guide if relationship == &quot;brother&quot; this = BRO
// if relationship == cargeiver, this = CGV, and so forth


tmp[&apos;NK1&apos;][&apos;NK1.3&apos;][&apos;NK1.3.2&apos;] = &apos;Mother&apos;; // Changes depending on code ^^^^

tmp[&apos;NK1&apos;][&apos;NK1.3&apos;][&apos;NK1.3.3&apos;] = &apos;HL70063&apos;; // This is the default table... maybe find one compatible with FHIR 0131

//NK1-4 Address of responsible person 

tmp[&apos;NK1&apos;][&apos;NK1.4&apos;][&apos;NK1.4.2&apos;] = patient[&apos;contact&apos;][3][&apos;line&apos;][0];
tmp[&apos;NK1&apos;][&apos;NK1.4&apos;][&apos;NK1.4.3&apos;] = patient[&apos;contact&apos;][3][&apos;city&apos;];
tmp[&apos;NK1&apos;][&apos;NK1.4&apos;][&apos;NK1.4.4&apos;] = patient[&apos;contact&apos;][3][&apos;state&apos;];
tmp[&apos;NK1&apos;][&apos;NK1.4&apos;][&apos;NK1.4.5&apos;] = patient[&apos;contact&apos;][3][&apos;postalCode&apos;];
tmp[&apos;NK1&apos;][&apos;NK1.4&apos;][&apos;NK1.4.6&apos;] = patient[&apos;contact&apos;][3][&apos;country&apos;];
tmp[&apos;NK1&apos;][&apos;NK1.4&apos;][&apos;NK1.4.7&apos;]= &apos;M&apos; // Mailing address

//NK1-5 Phone number -- need to seperate area code and number

tmp[&apos;NK1&apos;][&apos;NK1.5&apos;][&apos;NK1.5.2&apos;] = patient[&apos;contact&apos;][2][&apos;value&apos;];

var phoneNumber = patient[&apos;contact&apos;][2][&apos;value&apos;]; // get phone number
var areaCode = phoneNumber.replace(/\D/g,&apos;&apos;).substr(0, 3)
var number = phoneNumber.replace(/\D/g,&apos;&apos;).substr(3, 10) // need to test for functionality

tmp[&apos;NK1&apos;][&apos;NK1.5&apos;][&apos;NK1.5.6&apos;] = areaCode;
tmp[&apos;NK1&apos;][&apos;NK1.5&apos;][&apos;NK1.5.7&apos;] = number;
*/</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>ORC Segment </name>
          <sequenceNumber>4</sequenceNumber>
          <enabled>true</enabled>
          <script>// Grab immunization data
var immunization = msg[&apos;entry&apos;].filter(function (entry){
    return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Immunization&quot;;
})[0][&apos;resource&apos;];

//ORC-1 Order Control - Must contatin value &apos;RE&apos;
tmp[&apos;ORC&apos;][&apos;ORC.1&apos;] = &apos;RE&apos;;

//ORC-3 Filler Order Number(R) 
tmp[&apos;ORC&apos;][&apos;ORC.3&apos;] = immunization[&apos;id&apos;];


//ORC-2 Placer Order Number (RE) 
//ORC-10 Entered By -- Who entered the order
//ORC-12 Ordering Provider
//ORC-17 Entering Organization</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>RXA Segment</name>
          <sequenceNumber>5</sequenceNumber>
          <enabled>true</enabled>
          <script>//Grab immunization resource 


var immunization = msg[&apos;entry&apos;].filter(function (entry){
    return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Immunization&quot;;
})[0][&apos;resource&apos;];

var location = msg[&apos;entry&apos;].filter(function (entry){
    return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Location&quot;;
})[0][&apos;resource&apos;];

/* Need to add these to the bundle
var organization = msg[&apos;entry&apos;].filter(function (entry){
    return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Organization&quot;;
})[0][&apos;resource&apos;];

var actor = msg[&apos;entry&apos;].filter(function (entry){
    return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Practioner&quot;;
})[0][&apos;resource&apos;];
*/

//RXA-1 Must be 0
tmp[&apos;RXA&apos;][&apos;RXA.1&apos;] = 0;

//RXA-2 Must be 1
tmp[&apos;RXA&apos;][&apos;RXA.2&apos;] = 1;

//RXA-3 Data of Administrationmsg[&apos;entry&apos;][0][&apos;resource&apos;][&apos;occurrenceDateTime&apos;]

var occurenceDate = immunization[&apos;occurrenceDateTime&apos;];
tmp[&apos;RXA&apos;][&apos;RXA.3&apos;] = occurenceDate.split(&apos;-&apos;).join(&apos;&apos;); 

//RXA-5 Administered Code -- // NDC code?

/* Need to add organization to bundle
if(organization[&apos;name&apos;] == &apos;Pfizer&apos;){
	tmp[&apos;RXA&apos;][&apos;RXA.5.1&apos;][&apos;RXA.5.1.1&apos;]  = &apos;207&apos;;
	tmp[&apos;RXA&apos;][&apos;RXA.5.1&apos;][&apos;RXA.5.1.3&apos;]  = &apos;CVX&apos;;
}
else if(organization[&apos;name&apos;] == &apos;Moderna&apos;){
	tmp[&apos;RXA&apos;][&apos;RXA.5.1&apos;][&apos;RXA.5.1.1&apos;]  = &apos;208&apos;;
	tmp[&apos;RXA&apos;][&apos;RXA.5.1&apos;][&apos;RXA.5.1.3&apos;]  = &apos;CVX&apos;;
	}
	
*/

//RXA-6 Administered Amount

tmp[&apos;RXA&apos;][&apos;RXA.6&apos;] = immunization[&apos;doseQuantity&apos;][&apos;value&apos;];

//RXA-7 Administerd Units

tmp[&apos;RXA&apos;][&apos;RXA.7&apos;] = immunization[&apos;doseQuantity&apos;][&apos;code&apos;];

//RXA-9 Administration Notes 

tmp[&apos;RXA&apos;][&apos;RXA.9&apos;] = 00;


//RXA-10 Administering Provider -- Reference to Practioner

//tmp[&apos;RXA&apos;][&apos;RXA.10.1.1&apos;] = actor[&apos;name&apos;][&apos;family&apos;];
//tmp[&apos;RXA&apos;][&apos;RXA.10.1.2&apos;] = actor[&apos;name&apos;][&apos;given&apos;];
//tmp[&apos;RXA&apos;][&apos;RXA.10.1.7&apos;] = &apos;L&apos;;


//RXA-15 Substance Lot Number

tmp[&apos;RXA&apos;][&apos;RXA.15&apos;] = immunization[&apos;lotNumber&apos;];

//RXA-16 Substance Expiration Date
tmp[&apos;RXA&apos;][&apos;RXA.15&apos;] = immunization[&apos;expirationDate&apos;].replace(&apos;-&apos;,&apos;&apos;);

//RXA-17 Substance Manufacturer Name -- Reference to Organization 
/*
if(organization[&apos;name&apos;] == &apos;Pfizer&apos;){
	tmp[&apos;RXA&apos;][&apos;RXA.15&apos;][&apos;RXA.15.1.1&apos;]  = &apos;PFR&apos;;
	tmp[&apos;RXA&apos;][&apos;RXA.15&apos;][&apos;RXA.15.1.3&apos;] = &apos;MVX&apos;;
}
else if(organization[&apos;name&apos;] == &apos;Moderna&apos;){
	tmp[&apos;RXA&apos;][&apos;RXA.15&apos;][&apos;RXA.15.1.1&apos;]  = &apos;MOD&apos;;
	tmp[&apos;RXA&apos;][&apos;RXA.15&apos;][&apos;RXA.15.1.3&apos;] = &apos;MVX&apos;;
	}
*/


//RXA-21 Action Code
tmp[&apos;RXA&apos;][&apos;RXA.21&apos;] = &apos;A&apos;;

// Left for Q/A and questions
//RXA-11 Administer at Location -
//RXA-18 Refusal
//RXA-20 Completion Status</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>RXR Segment</name>
          <sequenceNumber>6</sequenceNumber>
          <enabled>true</enabled>
          <script>var immunization = msg[&apos;entry&apos;].filter(function (entry){
    return entry[&apos;resource&apos;][&apos;resourceType&apos;] === &quot;Immunization&quot;;
})[0][&apos;resource&apos;];

// RXR-1 Route of administration -- Immunization-route translation of NCIT to FHIR
var route = immunization[&apos;route&apos;][&apos;coding&apos;][0][&apos;code&apos;];

if(route == &apos;IM&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.1&apos;] = &apos;C28161&apos;;
}
else if(route == &apos;IDINJ&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.1&apos;] = &apos;C38238&apos;;
}
else if(route == &apos;IVINJ&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.1&apos;] = &apos;C38276&apos;;
}
else if(route == &apos;NASINHLC&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.1&apos;] = &apos;C38284&apos;;
}
else if(route == &apos;PO&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.1&apos;] = &apos;C38288&apos;;
}
else if(route == &apos;SQ&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.1&apos;] = &apos;C38299&apos;;
}	
else{
	tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.1&apos;] = &apos;C38305&apos;;
}

tmp[&apos;RXR&apos;][&apos;RXR.1&apos;][&apos;RXR.1.3&apos;] = &apos;NCIT&apos;;

// RXR-2 Administration Site
var site = immunization[&apos;site&apos;][&apos;coding&apos;][0][&apos;code&apos;];

if(site == &apos;LA&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.2&apos;][&apos;RXR.2.1&apos;] = &apos;LA&apos;;
	tmp[&apos;RXR&apos;][&apos;RXR.2&apos;][&apos;RXR.2.2&apos;] = &apos;Left Arm&apos;;
}
else if(site == &apos;RA&apos;){
	tmp[&apos;RXR&apos;][&apos;RXR.2&apos;][&apos;RXR.2.1&apos;] = &apos;RA&apos;;
	tmp[&apos;RXR&apos;][&apos;RXR.2&apos;][&apos;RXR.2.2&apos;] = &apos;Right Arm&apos;;
}

tmp[&apos;RXR&apos;][&apos;RXR.2&apos;][&apos;RXR.2.3&apos;] = &apos;HL70163&apos;;</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>OBX Segment</name>
          <sequenceNumber>7</sequenceNumber>
          <enabled>true</enabled>
          <script>// OBX-1 Set ID 

tmp[&apos;OBX&apos;][&apos;OBX.1&apos;] = 1;</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="3.10.0">
          <name>HTTP</name>
          <sequenceNumber>8</sequenceNumber>
          <enabled>true</enabled>
          <script>/*
// Create url object
var url = new java.net.URL(&apos;http://hapi.fhir.org/baseR4/Patient/1228028?_format=json&apos;);

// Open connection to url
var conn = url.openConnection();

conn.setRequestMethod(&quot;GET&quot;);

// Get response
var inputStream = conn.getInputStream();
var streamReader = new java.io.InputStreamReader(inputStream);
var respStream = new java.io.BufferedReader(streamReader);

//create variable to hold return data
var buffer = new java.lang.StringBuffer();
var line = null;
while ((line = respStream.readLine()) != null) {
buffer.append(line + &apos;\n&apos;);
}
respStream.close();

// Store response in channelMap
var response = buffer.toString();
channelMap.put(&apos;response&apos;, response);
tmp[&apos;PID&apos;][&apos;PID.10&apos;] = response;

var patObj = JSON.parse(response);

tmp[&apos;PID&apos;][&apos;PID.11&apos;] = patObj[&apos;id&apos;];

*/</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64">TVNIfF5+XCZ8TWFzc1ZheHh8MXx8fDIwMDUwMTEwMDQ1NTA0fHxWWFVeVjA0XlZYVV9WMDR8NTk5MTAyfFR8Mi41LjF8fHxFUnxBTHx8fHx8WjIyXkNEQ1BISU5WUyAKUElEfDF8fHx8fHx8fHwxfHx8fHx8fHx8fHx8fHx8fHx8fHwgCk9SQwpSWEEKUlhSCk9CWA==</outboundTemplate>
      <inboundDataType>JSON</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.10.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.10.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.10.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.10.0">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.10.0">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.10.0">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.10.0">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.10.0">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.10.0">
      <elements/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.10.0">
      <metaDataId>1</metaDataId>
      <name>TestHL7response</name>
      <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.10.0">
        <pluginProperties/>
        <destinationConnectorProperties version="3.10.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <scheme>FILE</scheme>
        <host>C:/Users/rrucker/OneDrive/MassVaxx/messages</host>
        <outputPattern>output.hl7</outputPattern>
        <anonymous>true</anonymous>
        <username>anonymous</username>
        <password>anonymous</password>
        <timeout>10000</timeout>
        <keepConnectionOpen>false</keepConnectionOpen>
        <maxIdleTime>0</maxIdleTime>
        <secure>true</secure>
        <passive>true</passive>
        <validateConnection>true</validateConnection>
        <outputAppend>false</outputAppend>
        <errorOnExists>false</errorOnExists>
        <temporary>false</temporary>
        <binary>false</binary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>${message.rawData}</template>
      </properties>
      <transformer version="3.10.0">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.10.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.10.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.10.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.10.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.10.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.10.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.10.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.10.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.10.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.10.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.10.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.10.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.10.0">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.10.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.10.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.10.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.10.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.10.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.10.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.10.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.10.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.10.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.10.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.10.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.10.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.10.0">
        <elements/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.10.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.10.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1610420275667</time>
        <timezone>America/New_York</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
      </pruningSettings>
    </metadata>
  </exportData>
</channel>